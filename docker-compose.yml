version: "3"

services:
  chat-web:
    image: chat-web:${UI_VERSION}
    container_name: chat-web
    restart: unless-stopped
    build: ./web
    depends_on: 
      - chat-api
    environment: 
      - NODE=production
      - UI_PORT=${UI_PORT}
      - REACT_APP_BACKEND_URL_PROD=${REACT_APP_BACKEND_URL_PROD}
      - REACT_APP_WEBSOCKET_URI_PROD=${REACT_APP_WEBSOCKET_URI_PROD}
    ports:
      - ${UI_PORT}:${UI_PORT}
    networks:
      - chat-app-frontend

  chat-api:
    image: chat-api:${API_VERSION}
    container_name: chat-api
    restart: unless-stopped
    build: ./api
    depends_on: 
      - chat-db
      - chat-pubsub
    environment: 
      - NODE_ENV=production
      - PORT=${API_PORT}
      - MONGO_USERNAME=${APP_MONGO_USER}
      - MONGO_PASSWORD=${APP_MONGO_PASS}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DB=${APP_MONGO_DB}
    ports: 
      - ${API_PORT}:${API_PORT}
    volumes: 
      - ./api/logs:/usr/src/app/logs
    networks: 
      - chat-app-backend
      - chat-app-frontend
    
  chat-db:
    image: mongo
    container_name: chat-db
    restart: unless-stopped
    ports:
      - ${MONGO_PORT}:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - APP_MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - APP_MONGO_USER=${APP_MONGO_USER}
      - APP_MONGO_PASS=${APP_MONGO_PASS}
      - APP_MONGO_DB=${APP_MONGO_DB}
    volumes: 
      - ChatDBData:/data/db
      - ./seedData:/seedData/
      - ./scripts/:/docker-entrypoint-initdb.d/

    networks: 
      - chat-app-backend

  chat-pubsub:
    image: redis
    container_name: chat-pubsub
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:6379
    networks: 
      - chat-app-backend
    
volumes: 
  ChatDBData:

networks: 
  chat-app-frontend:
  chat-app-backend: